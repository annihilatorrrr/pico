{
	on_demand_tls {
		ask http://web:3000/check
	}
	servers {
		metrics
		trusted_proxies static 0.0.0.0/0
	}
}

# custom domains
:443 {
	reverse_proxy web:3000
	log {
		format append {
			server_id {$APP_DOMAIN}
		}
	}
	tls {$APP_EMAIL} {
		on_demand
	}
	encode zstd gzip
}

# subdomains and root app domain
*.{$APP_DOMAIN}, {$APP_DOMAIN} {
	reverse_proxy web:3000
	log {
		format append {
			server_id {$APP_DOMAIN}
		}
	}
	tls {$APP_EMAIL} {
		dns cloudflare {$CF_API_TOKEN}
		resolvers 1.1.1.1
	}

	encode zstd gzip

	header {
		# disable FLoC tracking
		Permissions-Policy interest-cohort=()

		# enable HSTS
		Strict-Transport-Security max-age=31536000;

		# disable clients from sniffing the media type
		X-Content-Type-Options nosniff

		# clickjacking protection
		X-Frame-Options DENY

		# keep referrer data off of HTTP connections
		Referrer-Policy no-referrer-when-downgrade

		Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; img-src * 'unsafe-inline'; style-src * 'unsafe-inline'

		X-XSS-Protection "1; mode=block"
	}

	@caddymetrics {
		host {$APP_DOMAIN}
		path /_caddy/metrics
	}

	metrics @caddymetrics {
		disable_openmetrics
	}

	@sshmetrics {
		host {$APP_DOMAIN}
		path /_ssh/metrics
	}

	handle @sshmetrics {
		rewrite * /metrics
		reverse_proxy ssh:9222
	}

	@webmetrics {
		host {$APP_DOMAIN}
		path /_web/metrics
	}

	handle @webmetrics {
		rewrite * /_metrics
		reverse_proxy web:3000
	}
}
