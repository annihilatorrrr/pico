{{template "base" .}}

{{define "title"}}pubsub using ssh{{end}}

{{define "meta"}}
<meta name="description" content="pubsub using ssh" />

<meta property="og:type" content="website">
<meta property="og:site_name" content="{{.Site.Domain}}">
<meta property="og:url" content="https://{{.Site.Domain}}">
<meta property="og:title" content="{{.Site.Domain}}">
<meta property="og:description" content="pubsub using ssh">
{{end}}

{{define "attrs"}}class="container-sm"{{end}}

{{define "body"}}
<header class="flex flex-col items-center gap">
  <img src="https://pico.sh/logo.svg" alt="pico logo" width="50" height="50" />
  <h1 class="text-2xl font-bold text-center">Authenticated <code>*nix</code> pipes over <code>ssh</code></h1>
</header>

<hr />

<article class="flex flex-col gap-2">
  <div>
    <p>
      The simplest authenticated pubsub system.  Send messages through
      user-defined channels.  By default, channels are private to the authenticated
      ssh user.  The default pubsub model is multicast with bidirectional
      blocking, meaning a publisher (<code>pub</code>) will send its message to all
      subscribers (<code>sub</code>) on a channel.  Further, both <code>pub</code> and
      <code>sub</code> will wait for at least one event to be sent or received on the channel.
    </p>

    <blockquote>This service is undergoing active development, expect bugs, feature dev, and server restarts</blockquote>
  </div>

  <div>
    <h2 class="text-xl">A basic API</h2>
    <pre>ssh {{.Site.Domain}} sub mykey</pre>
    <pre>echo "hello world!" | ssh {{.Site.Domain}} pub mykey</pre>

    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/52qRVi77CTjfAoZj9IaGMygDr.js"
        id="asciicast-52qRVi77CTjfAoZj9IaGMygDr"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>
  </div>

  <div>
    <h2 class="text-xl">Simple desktop notifications</h2>
    <pre>ssh {{.Site.Domain}} sub notify; notify-send "job done!"</pre>
    <pre>./longjob.sh; ssh {{.Site.Domain}} pub notify -e</pre>
  </div>

  <div>
    <h2 class="text-xl">File sharing</h2>
    <pre>cat doc.md | ssh {{.Site.Domain}} pub thedoc</pre>
    <pre>ssh {{.Site.Domain}} sub thedoc > ./important.md</pre>

    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/TW0chshVssDj35hvr9NKNC2CK.js"
        id="asciicast-TW0chshVssDj35hvr9NKNC2CK"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>
  </div>

  <div>
    <h2 class="text-xl">Pipe command output</h2>
    <p>Send command output through our <code>pipe</code> command.</p>

    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/7e3SVyxKa31D0iZ4X5PJm8b6E.js"
        id="asciicast-7e3SVyxKa31D0iZ4X5PJm8b6E"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>
  </div>

  <div>
    <h2 class="text-xl">Chat</h2>
    <p>Use our <code>pipe</code> command to have a chat with someone.</p>
    <pre>ssh {{.Site.Domain}} pipe mychan -p</pre>
    <p>Now anyone with a <code>pico</code> account can subscribe to this channel using the same command.</p>

    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/fLBHAcPQqqawkrdpRdgEVFNrm.js"
        id="asciicast-fLBHAcPQqqawkrdpRdgEVFNrm"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>
  </div>

  <div>
    <h2 class="text-xl">Pipe reverse shell</h2>
    <p>If you squint hard enough you can give users interactive access to your shell.</p>

    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/S3LSLOi9mHQOPZHoK0xlkiKLM.js"
        id="asciicast-S3LSLOi9mHQOPZHoK0xlkiKLM"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>
  </div>

  <div>
    <h2 class="text-xl">Simple CI/CD</h2>
    <pre>ssh {{.Site.Domain}} sub myimg; docker pull myimg && docker up -d dev</pre>
    <pre>docker buildx build --push -t myimg .; ssh {{.Site.Domain}} pub myimg -e</pre>
  </div>

  <div>
    <h2 class="text-xl">Pubsub interactions</h2>

    <h3 class="text-lg">Multiple subs</h3>
    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/Ccee82V83EUyaZzFYbTn36BLF.js"
        id="asciicast-Ccee82V83EUyaZzFYbTn36BLF"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>

    <h3 class="text-lg">Multiple pubs</h3>
    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/ONe1OphgsKUt9MMPVRBiSbwd0.js"
        id="asciicast-ONe1OphgsKUt9MMPVRBiSbwd0"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>

    <h3 class="text-lg">Multiple pubs and subs</h3>
    <details>
      <summary>Demo</summary>
      <script
        src="https://asciinema.org/a/HAlhNCLFLvuGjiqnEEUvWVi1h.js"
        id="asciicast-HAlhNCLFLvuGjiqnEEUvWVi1h"
        async="true"
        data-theme="dracula"
        data-loop="true"
        data-speed="1.5"
        data-idle-time-limit="2"
      ></script>
    </details>
  </div>

  <div>
    <h2 class="text-xl">Send a public message</h2>
    <pre>echo "hello world!" | ssh {{.Site.Domain}} pub mychan -p</pre>
    <p>Now anyone with a <code>pico</code> account can subscribe to this channel:</p>
    <pre>ssh {{.Site.Domain}} sub mychan -p</pre>
  </div>

  <div>
    <h2 class="text-xl">Caveats</h2>
    <p>
      You must always pipe something into <code>pub</code> or else it will block
      indefinitely until the process is killed.  However, you can provide a
      flag to send an empty message: <code>pub xyz -e</code>.
    </p>
  </div>

  <div>
    <h2 class="text-xl">Inspiration</h2>
    <p>
      A special thanks to <a href="https://patchbay.pub">patchbay.pub</a> for our inspiration.
    </p>
  </div>

  <div class="text-center mb-2">
    <p>built on our <a href="https://github.com/picosh/pubsub">go pkg</a>.</p>
    <a href="https://pico.sh/getting-started" class="btn-link inline-block">GET STARTED</a>
  </div>
</article>

{{template "marketing-footer" .}}
{{end}}
